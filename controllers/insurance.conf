server {
    listen 80;
    server_name ec2-65-2-122-97.ap-south-1.compute.amazonaws.com;  # Replace with your EC2 Public DNS or domain

    # Proxy for backend API requests
    location /backend/ {
        rewrite ^/backend/(.*) /$1 break; # Strip `/backend` prefix for the backend app
        proxy_pass http://127.0.0.1:8086; # Backend Node.js server running on port 8086
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Forward client information headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for frontend (Next.js) application
    location / {
        proxy_pass http://127.0.0.1:3000; # Next.js SSR server running on port 3000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Forward client information headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Logs for debugging and monitoring
    access_log /var/log/nginx/insurance-access.log;
    error_log /var/log/nginx/insurance-error.log;

    # Optional: Error handling
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
